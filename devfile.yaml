schemaVersion: 2.2.2
metadata:
  name: django-postgres
  version: 1.0.0
  description: Devfile for Django server with PostgreSQL on OpenShift DevSpaces
# attributes:
#   controller.devfile.io/storage-type: ephemeral
projects:
  - name: django-postgres-devspaces
    git:
      remotes:
        origin: "https://github.com/LeandroJan/django-postgres-devspaces.git"
      checkoutFrom:
        remote: "origin"
        revision: "main"
components:
  - name: python
    container:
      image: registry.redhat.io/devspaces/udi-rhel8@sha256:9199796c9dd82a16ebb2c4ff8d06b9727f392eb93eb7ffa2974ad6c16e3d8e5d
      volumeMounts:
        - name: venv
          path: /home/user/.venv
      memoryLimit: 2Gi
      memoryRequest: 1Gi
      cpuLimit: '2'
      cpuRequest: '1'
      mountSources: true
  - name: postgres
    container:
      image: quay.io/centos7/postgresql-13-centos7:69623db6c74ac2437a2f11c0733e38c4b8dbb6b1
      env:
        - name: POSTGRESQL_DATABASE
          value: "db"
        - name: POSTGRESQL_USER
          value: "user"
        - name: POSTGRESQL_PASSWORD
          value: "password"
      endpoints:
        - name: postgres
          targetPort: 5432
          exposure: none
      mountSources: false
  # - name: python-django
  #   container:
  #     image: quay.io/devspaces/udi-rhel8:3.17
  #     # env:
  #     #   - name: KUBEDOCK_ENABLED
  #     #     value: 'true'
  #     volumeMounts:
  #       - name: venv
  #         path: /home/user/.venv
  #     memoryLimit: 2Gi
  #     memoryRequest: 1Gi
  #     cpuLimit: '2'
  #     cpuRequest: '1'
  #     mountSources: true
  #     endpoints:
  #       - name: django
  #         targetPort: 8000
  #         exposure: public
  - name: venv
    volume:
      size: 2G
commands:
  - id: run
    exec:
      component: python
      commandLine: "python -m venv .venv"
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: run
        isDefault: true
  - id: install-dependencies
    exec:
      component: python-django
      commandLine: ". .venv/bin/activate && pip install -r requirements.txt"
      workingDir: ${PROJECT_SOURCE}
  - id: migrate-database
    exec:
      component: python-django
      commandLine: ". .venv/bin/activate && python manage.py migrate"
      workingDir: ${PROJECT_SOURCE}
  - id: run-django
    exec:
      component: python-django
      commandLine: ". .venv/bin/activate && python manage.py runserver 0.0.0.0:8000"
      workingDir: ${PROJECT_SOURCE}
events:
  postStart:
    - install-dependencies
    # - migrate-database
    # - run-django
